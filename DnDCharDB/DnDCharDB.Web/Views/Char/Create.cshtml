@model DnDCharDB.Data.Models.Character

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Character</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group col-sm-12">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-sm-2" })
        <div class="col-sm-2">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
        @Html.LabelFor(model => model.Race, htmlAttributes: new { @class = "control-label col-sm-2" })
        <div class="col-sm-2">
            @Html.EnumDropDownListFor(model => model.Race, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Race, "", new { @class = "text-danger" })
        </div>
        @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label col-sm-2" })
        <div class="col-sm-2">
            @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
        </div>
    </div>

    <br />

    <div class="form-group col-sm-12">
        @Html.LabelFor(model => model.Class, htmlAttributes: new { @class = "control-label col-sm-2" })
        <div class="col-sm-2">
            @Html.EnumDropDownListFor(model => model.Class, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Class, "", new { @class = "text-danger" })
        </div>
        @Html.LabelFor(model => model.Level, htmlAttributes: new { @class = "control-label col-sm-2" })
        <div class="col-sm-2">
            @Html.EditorFor(model => model.Level, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Level, "", new { @class = "text-danger" })
        </div>
    </div>

    <br />

    <div class="form-group col-sm-12">
        @Html.Label("Health", htmlAttributes: new { @class = "control-label col-sm-2" })
        <div class="col-sm-2">
            @Html.EditorFor(model => model.Stats[0], new { htmlAttributes = new { @class = "dropdown" } })
            @Html.ValidationMessageFor(model => model.Stats, "", new { @class = "text-danger" })
        </div>
        @Html.Label("Health Growth", htmlAttributes: new { @class = "control-label col-sm-2" })
        <div class="col-sm-2">
            @Html.EditorFor(model => model.Growths[0], new { htmlAttributes = new { @class = "dropdown" } })
            @Html.ValidationMessageFor(model => model.Growths, "", new { @class = "text-danger" })
        </div>
    </div>

    <br />

    <div class="form-group col-sm-12">
        @Html.Label("Strength", htmlAttributes: new { @class = "control-label col-sm-2" })
        <div class="col-sm-2">
            @Html.EditorFor(model => model.Stats[1], new { htmlAttributes = new { @class = "dropdown" } })
            @Html.ValidationMessageFor(model => model.Stats, "", new { @class = "text-danger" })
        </div>
        @Html.Label("Strength Growth", htmlAttributes: new { @class = "control-label col-sm-2" })
        <div class="col-sm-2">
            @Html.EditorFor(model => model.Growths[1], new { htmlAttributes = new { @class = "dropdown" } })
            @Html.ValidationMessageFor(model => model.Growths, "", new { @class = "text-danger" })
        </div>
    </div>

    <br />

    <div class="form-group col-sm-12">
        @Html.Label("Magic", htmlAttributes: new { @class = "control-label col-sm-2" })
        <div class="col-sm-2">
            @Html.EditorFor(model => model.Stats[2], new { htmlAttributes = new { @class = "dropdown" } })
            @Html.ValidationMessageFor(model => model.Stats, "", new { @class = "text-danger" })
        </div>
        @Html.Label("Magic Growth", htmlAttributes: new { @class = "control-label col-sm-2" })
        <div class="col-sm-2">
            @Html.EditorFor(model => model.Growths[2], new { htmlAttributes = new { @class = "dropdown" } })
            @Html.ValidationMessageFor(model => model.Growths, "", new { @class = "text-danger" })
        </div>
    </div>

    <br />

    <div class="form-group col-sm-12">
        @Html.Label("Speed", htmlAttributes: new { @class = "control-label col-sm-2" })
        <div class="col-sm-2">
            @Html.EditorFor(model => model.Stats[3], new { htmlAttributes = new { @class = "dropdown" } })
            @Html.ValidationMessageFor(model => model.Stats, "", new { @class = "text-danger" })
        </div>
        @Html.Label("Speed Growth", htmlAttributes: new { @class = "control-label col-sm-2" })
        <div class="col-sm-2">
            @Html.EditorFor(model => model.Growths[3], new { htmlAttributes = new { @class = "dropdown" } })
            @Html.ValidationMessageFor(model => model.Growths, "", new { @class = "text-danger" })
        </div>
    </div>

    <br />

    <div class="form-group col-sm-12">
        @Html.Label("Skill", htmlAttributes: new { @class = "control-label col-sm-2" })
        <div class="col-sm-2">
            @Html.EditorFor(model => model.Stats[4], new { htmlAttributes = new { @class = "dropdown" } })
            @Html.ValidationMessageFor(model => model.Stats, "", new { @class = "text-danger" })
        </div>
        @Html.Label("Skill Growth", htmlAttributes: new { @class = "control-label col-sm-2" })
        <div class="col-sm-2">
            @Html.EditorFor(model => model.Growths[4], new { htmlAttributes = new { @class = "dropdown" } })
            @Html.ValidationMessageFor(model => model.Growths, "", new { @class = "text-danger" })
        </div>
    </div>

    <br />

    <div class="form-group col-sm-12">
        @Html.Label("Luck", htmlAttributes: new { @class = "control-label col-sm-2" })
        <div class="col-sm-2">
            @Html.EditorFor(model => model.Stats[5], new { htmlAttributes = new { @class = "dropdown" } })
            @Html.ValidationMessageFor(model => model.Stats, "", new { @class = "text-danger" })
        </div>
        @Html.Label("Luck Growth", htmlAttributes: new { @class = "control-label col-sm-2" })
        <div class="col-sm-2">
            @Html.EditorFor(model => model.Growths[5], new { htmlAttributes = new { @class = "dropdown" } })
            @Html.ValidationMessageFor(model => model.Growths, "", new { @class = "text-danger" })
        </div>
    </div>

    <br />

    <div class="form-group col-sm-12">
        @Html.Label("Defence", htmlAttributes: new { @class = "control-label col-sm-2" })
        <div class="col-sm-2">
            @Html.EditorFor(model => model.Stats[6], new { htmlAttributes = new { @class = "dropdown" } })
            @Html.ValidationMessageFor(model => model.Stats, "", new { @class = "text-danger" })
        </div>
        @Html.Label("Defence Growth", htmlAttributes: new { @class = "control-label col-sm-2" })
        <div class="col-sm-2">
            @Html.EditorFor(model => model.Growths[6], new { htmlAttributes = new { @class = "dropdown" } })
            @Html.ValidationMessageFor(model => model.Growths, "", new { @class = "text-danger" })
        </div>
    </div>

    <br />

    <div class="form-group col-sm-12">
        @Html.Label("Magic Defence", htmlAttributes: new { @class = "control-label col-sm-2" })
        <div class="col-sm-2">
            @Html.EditorFor(model => model.Stats[7], new { htmlAttributes = new { @class = "dropdown" } })
            @Html.ValidationMessageFor(model => model.Stats, "", new { @class = "text-danger" })
        </div>
        @Html.Label("M.Defence Growth", htmlAttributes: new { @class = "control-label col-sm-2" })
        <div class="col-sm-2">
            @Html.EditorFor(model => model.Growths[7], new { htmlAttributes = new { @class = "dropdown" } })
            @Html.ValidationMessageFor(model => model.Growths, "", new { @class = "text-danger" })
        </div>
    </div>

    <br />

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
